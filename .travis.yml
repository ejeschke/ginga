# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

compiler: gcc

os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.7
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES=''
        - MAIN_CMD='python setup.py'
        # *** TODO: We should test the various GUI toolkits that ginga supports
        # on travis-ci ... probably one build for Python 2 / 3 and each toolkit
        # https://ginga.readthedocs.io/en/latest/install.html#dependences
        - CONDA_DEPENDENCIES='pyqt'
        # Conda channels now need to be explicitly listed, ci-helpers won't
        # add astropy and astropy-ci-extras by default.
        - CONDA_CHANNELS='astropy-ci-extras astropy'

    matrix:
        # Make sure that egg_info works without dependencies
        - SETUP_CMD='egg_info'
        # Try all python versions with the latest Numpy
        - SETUP_CMD='test'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Test egg_info in Python 2
        # TODO: Change to ASTROPY_VERSION=lts when this job starts to fail.
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='egg_info'

        # Do a coverage test in Python 3.
        # *** TODO: `python setup.py test --coverage` doesn't work yet for `ginga` ... skipping for now
        # - os: linux
        #  env: SETUP_CMD='test --coverage'

        # TODO: Build doc with Python 3.7 when conda no longer conflicts.
        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: PYTHON_VERSION=3.6 SETUP_CMD='build_docs -w' PIP_DEPENDENCIES='sphinx_rtd_theme pillow'

        # Try older Numpy versions
        # TODO: Change to ASTROPY_VERSION=lts when PY2 job starts to fail.
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.10
        - os: linux
          env: PYTHON_VERSION=3.6 NUMPY_VERSION=1.12
        - os: linux
          env: NUMPY_VERSION=1.14

        # Try with Astropy dev and matplotlib installed
        - os: linux
          env: ASTROPY_VERSION=development CONDA_DEPENDENCIES='pyqt matplotlib'

        # Try with Numpy pre-release (this is skipped unless pre-release is available)
        - os: linux
          env: NUMPY_VERSION=prerelease CONDA_DEPENDENCIES='pyqt matplotlib'

        # Do a PEP8 test with flake8 (white-list in setup.cfg)
        - os: linux
          env: MAIN_CMD='flake8 ginga --count' SETUP_CMD=''

before_install:

    # If there are matplotlib tests, comment these out to
    # Make sure that interactive matplotlib backends work
    # - export DISPLAY=:99.0
    # - sh -e /etc/init.d/xvfb start

install:

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPDENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

script:
   - $MAIN_CMD $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    # - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='ginga/tests/coveragerc'; fi
