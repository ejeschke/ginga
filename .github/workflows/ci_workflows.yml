name: CI

on:
  push:
  pull_request:
  schedule:
    # Weekly Monday 6AM build
    # * is a special character in YAML so you have to quote this string
    - cron: '0 6 * * 1'

jobs:
  cancel_ci:
    name: Mandatory checks before CI
    runs-on: ubuntu-latest
    outputs:
      run_next: ${{ steps.skip_ci_step.outputs.run_next }}
    steps:
    # Base branch check should run whether we skip CI or not
    - name: Check base branch
      uses: pllim/action-check_pr_basebranch@main
      with:
        BASEBRANCH_NAME: master
        SKIP_BASEBRANCH_CHECK_LABEL: skip-basebranch-check
    - name: Check skip CI
      uses: OpenAstronomy/action-skip-ci@main
      id: skip_ci_step
      with:
        NO_FAIL: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # This should only run if we did not skip CI
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@ce177499ccf9fd2aded3b0426c97e5434c2e8a73
      if: steps.skip_ci_step.outputs.run_next == 'true'
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}

  # The rest only run if above are done

  pep_and_audit:
    runs-on: ubuntu-latest
    needs: cancel_ci
    if: needs.cancel_ci.outputs.run_next == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch tags
      run: git fetch --prune --unshallow --tags
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Lint with flake8
      run: |
        python -m pip install --upgrade pip flake8
        flake8 ginga --count
    # Make sure that packaging will work
    - name: PEP 517 build
      run: |
        python -m pip install --upgrade setuptools build "twine>=3.3"
        python -m build --sdist .
        twine check --strict dist/*
    - name: Security audit
      run: |
        python -m pip install --upgrade bandit
        bandit -r . -c .bandit.yaml

  multi_oses:
    runs-on: ${{ matrix.os }}
    needs: cancel_ci
    if: needs.cancel_ci.outputs.run_next == 'true'
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch tags
      run: git fetch --prune --unshallow --tags
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install and build
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install PyQt5 scipy photutils
        python -m pip install -e .[test]
    - name: Install Qt
      uses: jurplel/install-qt-action@b39f988
    - name: Run tests
      run: pytest --pyargs ginga doc -sv

  older_deps_tests:
    runs-on: ubuntu-16.04
    needs: cancel_ci
    if: needs.cancel_ci.outputs.run_next == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch tags
      run: git fetch --prune --unshallow --tags
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install and build
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install PyQt5 numpy==1.16 astropy==3.2
        python -m pip install -e .[test]
    - name: Install Qt
      uses: jurplel/install-qt-action@b39f988
    - name: Run tests
      run: pytest --pyargs ginga doc -sv

  dev_deps_tests:
    runs-on: ubuntu-latest
    needs: cancel_ci
    if: needs.cancel_ci.outputs.run_next == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch tags
      run: git fetch --prune --unshallow --tags
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install and build
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install PyQt5 matplotlib
        python -m pip install git+https://github.com/astropy/astropy.git@master#egg=astropy
        python -m pip install -e .[test]
    - name: Install Qt
      uses: jurplel/install-qt-action@b39f988
    - name: Run tests
      run: pytest --pyargs ginga doc -sv

  conda_linux_tests:
    runs-on: ubuntu-latest
    needs: cancel_ci
    if: needs.cancel_ci.outputs.run_next == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch tags
      run: git fetch --prune --unshallow --tags
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install and build
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        $CONDA/bin/conda install pip setuptools setuptools_scm
        $CONDA/bin/conda install qtpy pyqt matplotlib
        $CONDA/bin/conda install attrs astropy pytest-astropy -c conda-forge
        $CONDA/bin/pip install -e .
    - name: Run tests
      run: $CONDA/bin/pytest --pyargs ginga doc -sv
